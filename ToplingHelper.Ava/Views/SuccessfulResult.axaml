<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:HyperText.Avalonia.Controls;assembly=HyperText.Avalonia"
        xmlns:avalonia="clr-namespace:HyperText.Avalonia;assembly=HyperText.Avalonia"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ToplingHelper.Ava.Views.SuccessfulResult"
        Title="创建成功">
    <Window.Styles>
        <avalonia:HyperLinkStyle />
        <Style Selector=":is(TemplatedControl)">
            <Setter Property="FontFamily" Value="苹方-简"></Setter>
        </Style>
    </Window.Styles>
    <ScrollViewer>
        <StackPanel>
            <StackPanel>
                <WrapPanel>
                    <TextBlock>请登录阿里云，在</TextBlock>
                    <TextBlock>vpc-xxxxxxxxxx</TextBlock>
                    <TextBlock>下创建新ECS实例，操作系统请选择</TextBlock>
                    <TextBlock>Centos(7/8) /Aliyunos/Ubuntu (16.04/18.04)</TextBlock>
                </WrapPanel>
                <WrapPanel>
                    <TextBlock>创建时请为ECS实例添加</TextBlock>
                    <TextBlock>公网IP</TextBlock>
                    <TextBlock>(一键脚本使用公网安装 oss-util 相关依赖，使用内网挂载数据集)</TextBlock>
                </WrapPanel>
                <WrapPanel>
                    <TextBlock>一定在</TextBlock>
                    <TextBlock>vpc-xxxxxxxxxx</TextBlock>
                    <TextBlock>下创建实例！</TextBlock>
                </WrapPanel>
                <WrapPanel>
                    <TextBlock>操作系统请选择</TextBlock>
                    <TextBlock>Centos(7/8) /Aliyunos/Ubuntu (16.04/18.04)</TextBlock>
                </WrapPanel>
                <TextBlock>连接</TextBlock>
                <controls:Hyperlink>查看Grafana监控</controls:Hyperlink>
                <controls:Hyperlink>查看引擎监控</controls:Hyperlink>
            </StackPanel>
            <StackPanel>
                <TextBlock>· 如果ping不通</TextBlock>
                <WrapPanel>
                    <TextBlock>1. 运行</TextBlock>
                    <TextBox IsReadOnly="True">curl http://100.100.100.200/latest/meta-data/vpc-id</TextBox>
                    <TextBlock>查看结果是否为</TextBlock>
                    <TextBlock>vpx-xxxxxxxxxx</TextBlock>
                </WrapPanel>
                <WrapPanel>
                    <TextBlock>2. 查看路由表(</TextBlock>
                    <controls:Hyperlink>跳转链接</controls:Hyperlink>
                    <TextBlock>)，选择自定义路由条目，应该存在一条</TextBlock>
                    <TextBlock>目标网段为为 10.0.0.0/16，下一跳为pcC-5vlns760$3p4uj988h</TextBlock>
                    <TextBlock>的条目。若缺少，请添加自定义路由条目：</TextBlock>
                    <TextBlock>vpc-xxxxxxxxxx</TextBlock>
                </WrapPanel>
            </StackPanel>
            <StackPanel>
                <TextBlock>· 测试性能</TextBlock>
                <TextBox><![CDATA[
# 请首先确保测试实例为CentOS/AliOS
# 下载自动脚本
wget https://topling.cn/downloads/mount-test.sh && chmod +x ./mount-test.sh

# 挂载测试程序及源数据到 /mnt
sudo bash mount-test.sh /mnt
                ]]></TextBox>
                <TextBlock><![CDATA[
# 直接执行查看帮助
/mnt/InsertKeys

# 插入顺序数据(源文件过大，已使用 zstd 压缩)
zstd -d -c -q /mnt/wikipedia-flat-seq.zst | /mnt/InsertKeys -h {privateIp} -t 8 --multi-set 8 -f /dev/stdin

# 插入乱序数据(源文件过大，已使用 zstd 压缩)
zstd -d -c -q /mnt/wikipedia-flat-rand.zst | /mnt/InsertKeys -h {privateIp} -t 8 --multi-set 8 -f /dev/stdin

# 读取数据(顺序)
/mnt/GetKeysQps -t 32 -n 8 -f /mnt/wikipedia-flat-key-seq.txt -h {privateIp}

# 读取数据(乱序)
/mnt/GetKeysQps -t 32 -n 8 -f /mnt/wikipedia-flat-key-rand.txt -h {privateIp}

# 测试 hash 写性能
zstd -d -c -q /mnt/weibo.zst  |  /mnt/InsertWeiboData -h {privateIp} -t 32 -f /dev/stdin  --disabled_seekg --ignore_logs
                ]]></TextBlock>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</Window>
